import {Http, Headers, RequestOptionsArgs, Response, URLSearchParams} from '@angular/http';
import {Injectable, Optional} from '@angular/core';
import {Observable} from 'rxjs/Observable';
import * as models from '../model/models';
import 'rxjs/Rx';

/* tslint:disable:no-unused-variable member-ordering */

'use strict';








{#
{% for className, property in swagger.definitions %}
import {{ '{ ' ~ className ~ 'Repository }' }} from "./Repository/{{ className }}Repository";
{% endfor %}#}

@Injectable()
export class Api
{
    constructor(private appHttp:AppHttp) {}
{% for path, pathItem in swagger.paths %}
{% for method, operation in pathItem.getOperations() %}
    public {{ operation.operationId }}(): void
    {
        return this.appHttp.{{ method }}('{{ path }}')
                .map(
                        (response: Response) => {
                            return true;
                        }
                );
    }
{% endfor %}
{% endfor %}
}
