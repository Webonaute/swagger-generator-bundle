import { ModelInterface } from './model-interface';
{% if schema.parentAlias is not null -%}
import { Base{{ schema.parentAlias|class_name }} } from './base-{{ schema.parentAlias|class_filename }}';
{% endif %}
{% set typeNames = [] %}
{% for propertyName, property in schema.properties %}
{% set type = property|convert_type(dsg.registry.ts.type_mapping) %}
{% if type == "array" %}{% set type = property.items|convert_type(dsg.registry.ts.type_mapping) %}{% endif %}
{% if type|is_class(dsg.registry.ts.type_mapping) and type not in typeNames %}{% set typeNames = typeNames|merge([type]) %}
import {{ '{ ' ~ type ~ ' }' }} from '../model/{{ type|class_filename }}';
{% endif %}
{% endfor %}

