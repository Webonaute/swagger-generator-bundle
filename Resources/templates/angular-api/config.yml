tags: ['language:typescript','framework:angular']
files:
  #README.md.twig: {}

  backend/base-api/base-api.ts.twig:
      #overwrite: false
      fileName: "backend/base-api/base-api-{{ tag|class_filename }}.ts"
      forPathExpression:
        key: tag
        expression: swagger.paths.*.get.tags[0] || swagger.paths.*.put.tags[0] || swagger.paths.*.delete.tags[0] || swagger.paths.*.post.tags[0]

  backend/api/api.ts.twig:
      overwrite: false
      fileName: "backend/api/api-{{ tag|class_filename }}.ts"
      forPathExpression:
        key: tag
        expression: swagger.paths.*.get.tags[0] || swagger.paths.*.put.tags[0] || swagger.paths.*.delete.tags[0] || swagger.paths.*.post.tags[0]

  backend/api/index.ts.twig:
      fileName: "backend/api/index.ts"
      with:
          tags:
              pathExpression: swagger.paths.*.get.tags[0] || swagger.paths.*.put.tags[0] || swagger.paths.*.delete.tags[0] || swagger.paths.*.post.tags[0]
              unique: true

  backend/base-model/model.ts.twig:
      fileName: "backend/base-model/base-{{ definitionName|class_filename }}.ts"
      for:
        key: definitionName
        value: schema
        in:  '[swagger].definitions'

  backend/base-model/model-interface.ts.twig:
      fileName: "backend/base-model/model-interface.ts"

  backend/model/model.ts.twig:
      overwrite: false
      fileName: "backend/model/{{ definitionName|class_filename }}.ts"
      for:
        key: definitionName
        value: schema
        in:  '[swagger].definitions'

  backend/model/index.ts.twig:
      fileName: "backend/model/index.ts"

  backend/index.ts.twig:
      fileName: "backend/index.ts"

  backend/apis.module.ts.twig:
      fileName: "backend/apis.module.ts"
      with:
          tags:
              pathExpression: swagger.paths.*.get.tags[0] || swagger.paths.*.put.tags[0] || swagger.paths.*.delete.tags[0] || swagger.paths.*.post.tags[0]
              unique: true

  backend/app-http.service.ts.twig:
      overwrite: true