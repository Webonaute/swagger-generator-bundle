tags: ['language:typescript','framework:angular']
files:
  #README.md.twig: {}

  App/Api/Api.ts.twig:
      overwrite: false
      fileName: "App/Api/Api{{ tag|class_name }}.ts"
      forPathExpression:
        key: tag
        expression: swagger.paths.*.get.tags[0] || swagger.paths.*.put.tags[0] || swagger.paths.*.delete.tags[0] || swagger.paths.*.post.tags[0]

  App/BaseApi/BaseApi.ts.twig:
      #overwrite: false
      fileName: "App/BaseApi/BaseApi{{ tag|class_name }}.ts"
      forPathExpression:
        key: tag
        expression: swagger.paths.*.get.tags[0] || swagger.paths.*.put.tags[0] || swagger.paths.*.delete.tags[0] || swagger.paths.*.post.tags[0]

  App/BaseModel/model.ts.twig:
      fileName: "App/BaseModel/Base{{ definitionName|class_name }}.ts"
      for:
        key: definitionName
        value: schema
        in:  '[swagger].definitions'

  App/Model/model.ts.twig:
      overwrite: false
      fileName: "App/Model/{{ definitionName|class_name }}.ts"
      for:
        key: definitionName
        value: schema
        in:  '[swagger].definitions'

  App/Model/index.ts.twig:
      fileName: "App/Model/index.ts"

  App/index.ts.twig:
      fileName: "App/index.ts"

  App/BaseModel/ModelInterface.ts.twig:
      fileName: "App/BaseModel/ModelInterface.ts"

  App/Api/index.ts.twig:
      fileName: "App/Api/index.ts"
      with:
          tags:
              pathExpression: swagger.paths.*.get.tags[0] || swagger.paths.*.put.tags[0] || swagger.paths.*.delete.tags[0] || swagger.paths.*.post.tags[0]
              unique: true
      #overwrite: false
  App/AppHttp.ts.twig: {}
      #overwrite: false